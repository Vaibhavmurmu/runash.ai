
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "DATABASE_URL="prisma+postgres://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiMmRlNGY3MzUtNzc2Ny00YjMyLWFkYTYtMzgyZGFkNTZjOTQ3IiwidGVuYW50X2lkIjoiYzQ4YzFmZDIxN2E5ZGFiYTM2MWFjOGE3ZjEyZGY5MWYxZmExMzdjMjAxYTM1MGY3Nzc0ODRkYTI0NWYyYzkyZiIsImludGVybmFsX3NlY3JldCI6IjFiNzhlYTExLTJiYjQtNDM4MC1hOGZlLWY1YmEyMTQ3ZGQ4MCJ9.shww_Wn6e4un6Y6cGnOdbJuFW1FmXQdI_E5qpyf131M"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          String    @default("USER") // USER, SELLER, ADMIN
  username      String?   @unique
  bio           String?   @db.Text
  website       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  seller        Seller?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Seller {
  id          String   @id @default(cuid())
  userId      String   @unique
  storeName   String
  description String?  @db.Text
  approved    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
